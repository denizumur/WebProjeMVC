@{
    ViewData["Title"] = "Yeni Çalışan";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
@model berber.Models.Randevu
@{
    ViewData["Title"] = "Yeni Randevu Ekle";
}

@if (TempData["HataMesaji"] != null)
{
    <div class="alert alert-danger">@TempData["HataMesaji"]</div>
}

@if (TempData["BasariMesaji"] != null)
{
    <div class="alert alert-success">@TempData["BasariMesaji"]</div>
}

<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet" />
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>

<form asp-controller="Admin" asp-action="RandevuEkle" method="post">
    <div class="form-group">
        <label asp-for="Tarih">Randevu Tarihi</label>
        <input asp-for="Tarih" class="form-control" type="date" id="selectedDate"  />
        <span asp-validation-for="Tarih" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label>Kullanıcı</label>
        <select asp-for="KullaniciID" class="form-control">
            <option value="">Kullanıcı Seçin</option>
            @foreach (var kullanici in ViewBag.Kullanicilar)
            {
                <option value="@kullanici.KullaniciID">@kullanici.AdSoyad</option>
            }
        </select>
        <span asp-validation-for="KullaniciID" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="CalisanID">Çalışan</label>
        <select asp-for="CalisanID" class="form-control" id="calisanSelect">
            <option value="">Çalışan Seçin</option>
            @foreach (var calisan in ViewBag.Calisanlar)
            {
                <option value="@calisan.CalisanID">@calisan.AdSoyad</option>
            }
        </select>
        <span asp-validation-for="CalisanID" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label>Uygun Saatler</label>
        <select class="form-control" id="uygunSaatler" name="selectedSaat" required>
            <option value="">Önce tarih ve çalışan seçin</option>
        </select>
    </div>

    <div class="form-group">
        <label>Hizmetler</label>
        <div id="islemListesi">
            <!-- Hizmetler burada dinamik olarak yüklenecek -->
        </div>
    </div>

    <div class="form-group">
        <input type="submit" value="Randevu Ekle" class="btn btn-primary" />
    </div>
</form>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<script>
    $(document).ready(function () {
        // Tarih ve çalışan seçiminde değişiklik olduğunda işlemleri tetikle
        $('#calisanSelect, #selectedDate').change(function () {
            var calisanId = $('#calisanSelect').val(); // Seçilen çalışan ID'si
            var selectedDate = $('#selectedDate').val(); // Seçilen tarih

            // Bugünün tarih ve saat kontrolü
            var now = new Date();
            var today = now.toISOString().split('T')[0]; // Bugünün tarihi (yyyy-MM-dd formatında)
            var currentHour = now.getHours();
            var currentMinute = now.getMinutes();

            if (selectedDate < today) {
                alert("Bugünden önceki tarihler için randevu oluşturulamaz.");
                $('#uygunSaatler').html('<option value="">Bugünden önce saat seçilemez</option>');
                $('#islemListesi').html('');
                return; // İşlemleri durdur
            }

            // Çalışan ve tarih seçilmişse AJAX çağrısını başlat
            if (calisanId && selectedDate) {
                $.ajax({
                    url: '@Url.Action("GetAvailableHours", "Admin")',
                    data: { calisanId: calisanId, selectedDate: selectedDate },
                    type: 'GET',
                    success: function (data) {
                        var saatlerHTML = '<option value="">Saat Seçin</option>';

                        if (data && data.length > 0) {
                            // 10 dakikalık aralıklarla uygun saatleri oluştur
                            data.forEach(function (saat) {
                                var saatParcalari = saat.split(':');
                                var saatSaat = parseInt(saatParcalari[0]);
                                var saatDakika = parseInt(saatParcalari[1]);

                                if (
                                    selectedDate > today || // Gelecek bir günse saatleri doğrudan ekle
                                    (selectedDate === today &&
                                        (saatSaat > currentHour || (saatSaat === currentHour && saatDakika > currentMinute)))
                                ) {
                                    saatlerHTML += '<option value="' + saat + '">' + saat + '</option>';
                                }
                            });
                        } else {
                            saatlerHTML = '<option value="">Uygun saat bulunmamaktadır</option>';
                        }

                        $('#uygunSaatler').html(saatlerHTML);
                    },
                    error: function (xhr, status, error) {
                        console.error("Saatler yüklenirken hata:", xhr.responseText, status, error);
                        alert('Saatler yüklenirken bir hata oluştu.');
                    }
                });

                // Hizmetleri getir
                $.ajax({
                    url: '@Url.Action("GetIslemlerByCalisan", "Admin")', // Controller'daki action URL'si
                    data: { calisanId: calisanId }, // Çalışan ID'si gönderiliyor
                    type: 'GET',
                    success: function (data) {
                        var hizmetlerHTML = '';

                        if (data && data.length > 0) {
                            // Her bir işlem için checkbox oluştur
                            data.forEach(function (islem) {
                                hizmetlerHTML += '<div class="form-check">' +
                                    '<input class="form-check-input" type="checkbox" name="selectedIslemler" value="' + islem.islemID + '" />' +
                                    '<label class="form-check-label">' + islem.islemAdi + '</label>' +
                                    '</div>';
                            });
                        } else {
                            hizmetlerHTML = '<p>Bu çalışana ait herhangi bir hizmet bulunmamaktadır.</p>';
                        }

                        // Hizmetler HTML'ini #islemListesi div'ine ekle
                        $('#islemListesi').html(hizmetlerHTML);
                    },
                    error: function () {
                        alert('Hizmetler yüklenirken bir hata oluştu.');
                    }
                });
            } else {
                // Eğer çalışan veya tarih seçilmemişse, uygun saatler ve hizmetler kısmını temizle
                $('#uygunSaatler').html('<option value="">Önce tarih ve çalışan seçin</option>');
                $('#islemListesi').html('');
            }
        });
    });

    
</script>