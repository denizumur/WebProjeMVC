@{
    ViewData["Title"] = "Randevu Ekle";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@model berber.Models.Randevu
@if (TempData["HataMesaji"] != null)
{
    <div class="alert alert-danger">@TempData["HataMesaji"]</div>
}

@if (TempData["BasariMesaji"] != null)
{
    <div class="alert alert-success">@TempData["BasariMesaji"]</div>
}

<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet" />
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>

<form asp-controller="Login" asp-action="RandevuEkle" method="post">
    <div class="form-group">
        <label asp-for="Tarih">Randevu Tarihi</label>
        <input asp-for="Tarih" class="form-control" type="date" id="selectedDate" required
               min="@DateTime.Today.ToString("yyyy-MM-dd")" />
        <span asp-validation-for="Tarih" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="CalisanID">Çalışan</label>
        <select asp-for="CalisanID" class="form-control" id="calisanSelect" required>
            <option value="">Çalışan Seçin</option>
            @foreach (var calisan in ViewBag.Calisanlar)
            {
                <option value="@calisan.CalisanID">@calisan.AdSoyad</option>
            }
        </select>
        <span asp-validation-for="CalisanID" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label>Uygun Saatler</label>
        <select class="form-control" id="uygunSaatler" name="selectedSaat" required>
            <option value="">Önce tarih ve çalışan seçin</option>
        </select>
    </div>

    <div class="form-group">
        <label>Hizmetler</label>
        <div id="islemListesi">
            <!-- Hizmetler burada dinamik olarak yüklenecek -->
        </div>
    </div>

    <div class="form-group">
        <input type="submit" value="Randevu Ekle" class="btn btn-primary" />
    </div>
</form>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<script>
    $(document).ready(function () {
        // Tarih ve çalışan seçiminde değişiklik olduğunda işlemleri tetikle
        $('#calisanSelect, #selectedDate').change(function () {
            var calisanId = $('#calisanSelect').val(); // Seçilen çalışan ID'si
            var selectedDate = $('#selectedDate').val(); // Seçilen tarih
            var today = new Date().toISOString().split('T')[0];

            // Geçmiş bir tarih seçildiyse kullanıcıya hata mesajı göster
            if (selectedDate < today) {
                $('#uygunSaatler').html('<option value="">Bugünden önce bir tarih seçilemez</option>');
                $('#islemListesi').html('');
                return;
            }

            if (!calisanId || !selectedDate) {
                $('#uygunSaatler').html('<option value="">Önce tarih ve çalışan seçin</option>');
                $('#islemListesi').html('');
                return;
            }

            // Saatleri getir
            $.ajax({
                url: '@Url.Action("GetAvailableHours", "Login")',
                data: { calisanId: calisanId, selectedDate: selectedDate },
                type: 'GET',
                success: function (data) {
                    var saatlerHTML = '<option value="">Saat Seçin</option>';
                    if (data && data.length > 0) {
                        data.forEach(function (saat) {
                            saatlerHTML += '<option value="' + saat + '">' + saat + '</option>';
                        });
                    } else {
                        saatlerHTML = '<option value="">Uygun saat bulunmamaktadır</option>';
                    }
                    $('#uygunSaatler').html(saatlerHTML);
                },
                error: function () {
                    alert('Saatler yüklenirken bir hata oluştu.');
                }
            });

            // Hizmetleri getir
            $.ajax({
                url: '@Url.Action("GetIslemlerByCalisan", "Login")',
                data: { calisanId: calisanId },
                type: 'GET',
                success: function (data) {
                    var hizmetlerHTML = '';
                    if (data && data.length > 0) {
                        data.forEach(function (islem) {
                            hizmetlerHTML += '<div class="form-check">' +
                                '<input class="form-check-input" type="checkbox" name="selectedIslemler" value="' + islem.islemID + '" />' +
                                '<label class="form-check-label">' + islem.islemAdi + '</label>' +
                                '</div>';
                        });
                    } else {
                        hizmetlerHTML = '<p>Bu çalışana ait herhangi bir hizmet bulunmamaktadır.</p>';
                    }
                    $('#islemListesi').html(hizmetlerHTML);
                },
                error: function () {
                    alert('Hizmetler yüklenirken bir hata oluştu.');
                }
            });
        });
    });
</script>