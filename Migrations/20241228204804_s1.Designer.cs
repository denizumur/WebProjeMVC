// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using berber.Models;

#nullable disable

namespace berber.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20241228204804_s1")]
    partial class s1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("berber.Models.Calisan", b =>
                {
                    b.Property<int>("CalisanID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CalisanID"));

                    b.Property<string>("AdSoyad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UygunlukSaatleri")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UzmanlikAlanlari")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CalisanID");

                    b.ToTable("Calisanlar");
                });

            modelBuilder.Entity("berber.Models.CalisanIslem", b =>
                {
                    b.Property<int>("CalisanIslemID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CalisanIslemID"));

                    b.Property<int>("CalisanID")
                        .HasColumnType("int");

                    b.Property<int>("IslemID")
                        .HasColumnType("int");

                    b.HasKey("CalisanIslemID");

                    b.HasIndex("CalisanID");

                    b.HasIndex("IslemID");

                    b.ToTable("CalisanIslemler");
                });

            modelBuilder.Entity("berber.Models.Islem", b =>
                {
                    b.Property<int>("IslemID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IslemID"));

                    b.Property<string>("IslemAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Sure")
                        .HasColumnType("int");

                    b.Property<int>("Ucret")
                        .HasColumnType("int");

                    b.HasKey("IslemID");

                    b.ToTable("Islemler");
                });

            modelBuilder.Entity("berber.Models.Kullanici", b =>
                {
                    b.Property<int>("KullaniciID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KullaniciID"));

                    b.Property<string>("AdSoyad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sifre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UyelikTarihi")
                        .HasColumnType("datetime2");

                    b.HasKey("KullaniciID");

                    b.ToTable("Kullanicilar");
                });

            modelBuilder.Entity("berber.Models.Randevu", b =>
                {
                    b.Property<int>("RandevuID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RandevuID"));

                    b.Property<int?>("CalisanID")
                        .HasColumnType("int");

                    b.Property<bool?>("Durum")
                        .HasColumnType("bit");

                    b.Property<int?>("KullaniciID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Tarih")
                        .HasColumnType("datetime2");

                    b.HasKey("RandevuID");

                    b.HasIndex("CalisanID");

                    b.HasIndex("KullaniciID");

                    b.ToTable("Randevular");
                });

            modelBuilder.Entity("berber.Models.RandevuIslem", b =>
                {
                    b.Property<int>("RandevuIslemID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RandevuIslemID"));

                    b.Property<int>("IslemID")
                        .HasColumnType("int");

                    b.Property<int>("RandevuID")
                        .HasColumnType("int");

                    b.HasKey("RandevuIslemID");

                    b.HasIndex("IslemID");

                    b.HasIndex("RandevuID");

                    b.ToTable("RandevuIslemler");
                });

            modelBuilder.Entity("berber.Models.CalisanIslem", b =>
                {
                    b.HasOne("berber.Models.Calisan", "Calisan")
                        .WithMany("CalisanIslemler")
                        .HasForeignKey("CalisanID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("berber.Models.Islem", "Islem")
                        .WithMany("CalisanIslemler")
                        .HasForeignKey("IslemID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Calisan");

                    b.Navigation("Islem");
                });

            modelBuilder.Entity("berber.Models.Randevu", b =>
                {
                    b.HasOne("berber.Models.Calisan", "Calisan")
                        .WithMany("Randevular")
                        .HasForeignKey("CalisanID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("berber.Models.Kullanici", "Kullanici")
                        .WithMany("Randevular")
                        .HasForeignKey("KullaniciID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Calisan");

                    b.Navigation("Kullanici");
                });

            modelBuilder.Entity("berber.Models.RandevuIslem", b =>
                {
                    b.HasOne("berber.Models.Islem", "Islem")
                        .WithMany("RandevuIslemler")
                        .HasForeignKey("IslemID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("berber.Models.Randevu", "Randevu")
                        .WithMany("RandevuIslemler")
                        .HasForeignKey("RandevuID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Islem");

                    b.Navigation("Randevu");
                });

            modelBuilder.Entity("berber.Models.Calisan", b =>
                {
                    b.Navigation("CalisanIslemler");

                    b.Navigation("Randevular");
                });

            modelBuilder.Entity("berber.Models.Islem", b =>
                {
                    b.Navigation("CalisanIslemler");

                    b.Navigation("RandevuIslemler");
                });

            modelBuilder.Entity("berber.Models.Kullanici", b =>
                {
                    b.Navigation("Randevular");
                });

            modelBuilder.Entity("berber.Models.Randevu", b =>
                {
                    b.Navigation("RandevuIslemler");
                });
#pragma warning restore 612, 618
        }
    }
}
